{"version":3,"sources":["../../../../src/dash/SegmentBaseLoader.js"],"names":[],"mappings":"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","file":"SegmentBaseLoader.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport RequestModifier from '../streaming/utils/RequestModifier';\nimport Segment from './vo/Segment';\nimport Error from '../streaming/vo/Error';\nimport ErrorHandler from '../streaming/utils/ErrorHandler';\nimport Events from '../core/events/Events';\nimport EventBus from '../core/EventBus';\nimport BoxParser from '../streaming/utils/BoxParser';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Debug from '../core/Debug';\n\nfunction SegmentBaseLoader() {\n\n    let context = this.context;\n    let log = Debug(context).getInstance().log;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        errHandler,\n        boxParser,\n        requestModifier,\n        baseURLController;\n\n    function initialize() {\n        errHandler = ErrorHandler(context).getInstance();\n        boxParser = BoxParser(context).getInstance();\n        requestModifier = RequestModifier(context).getInstance();\n    }\n\n    function setConfig(config) {\n        if (config.baseURLController) {\n            baseURLController = config.baseURLController;\n        }\n    }\n\n    function loadInitialization(representation, loadingInfo) {\n        var needFailureReport = true;\n        var initRange = null;\n        var isoFile = null;\n        var request = new XMLHttpRequest();\n        var baseUrl = baseURLController.resolve(representation.path);\n        var info = loadingInfo || {\n            url: baseUrl ? baseUrl.url : undefined,\n            range: {\n                start: 0,\n                end: 1500\n            },\n            searching: false,\n            bytesLoaded: 0,\n            bytesToLoad: 1500,\n            request: request\n        };\n\n        log('Start searching for initialization.');\n\n        request.onload = function () {\n            if (request.status < 200 || request.status > 299) return;\n\n            needFailureReport = false;\n\n            info.bytesLoaded = info.range.end;\n            isoFile = boxParser.parse(request.response);\n            initRange = findInitRange(isoFile);\n\n            if (initRange) {\n                representation.range = initRange;\n                representation.initialization = info.url;\n                eventBus.trigger(Events.INITIALIZATION_LOADED, {representation: representation});\n            } else {\n                info.range.end = info.bytesLoaded + info.bytesToLoad;\n                loadInitialization(representation, info);\n            }\n\n        };\n\n        request.onloadend = request.onerror = function () {\n            if (!needFailureReport) return;\n            needFailureReport = false;\n\n            errHandler.downloadError('initialization', info.url, request);\n            eventBus.trigger(Events.INITIALIZATION_LOADED, {representation: representation});\n        };\n\n        sendRequest(request, info);\n        log('Perform init search: ' + info.url);\n    }\n\n    function loadSegments(representation, type, range, loadingInfo, callback) {\n        if (range && (range.start === undefined || range.end === undefined)) {\n            var parts = range ? range.toString().split('-') : null;\n            range = parts ? {start: parseFloat(parts[0]), end: parseFloat(parts[1])} : null;\n        }\n\n        callback = !callback ? onLoaded : callback;\n        var needFailureReport = true;\n        var isoFile = null;\n        var sidx = null;\n        var hasRange = !!range;\n        var request = new XMLHttpRequest();\n        var baseUrl = baseURLController.resolve(representation.path);\n        var info = {\n            url: baseUrl ? baseUrl.url : undefined,\n            range: hasRange ? range : { start: 0, end: 1500 },\n            searching: !hasRange,\n            bytesLoaded: loadingInfo ? loadingInfo.bytesLoaded : 0,\n            bytesToLoad: 1500,\n            request: request\n        };\n\n        request.onload = function () {\n            if (request.status < 200 || request.status > 299) return;\n\n            var extraBytes = info.bytesToLoad;\n            var loadedLength = request.response.byteLength;\n\n            needFailureReport = false;\n            info.bytesLoaded = info.range.end - info.range.start;\n            isoFile = boxParser.parse(request.response);\n            sidx = isoFile.getBox('sidx');\n\n            if (!sidx || !sidx.isComplete) {\n                if (sidx) {\n                    info.range.start = sidx.offset || info.range.start;\n                    info.range.end = info.range.start + (sidx.size || extraBytes);\n                } else if (loadedLength < info.bytesLoaded) {\n                    // if we have reached a search limit or if we have reached the end of the file we have to stop trying to find sidx\n                    callback(null, representation, type);\n                    return;\n                } else {\n                    var lastBox = isoFile.getLastBox();\n\n                    if (lastBox && lastBox.size) {\n                        info.range.start = lastBox.offset + lastBox.size;\n                        info.range.end = info.range.start + extraBytes;\n                    } else {\n                        info.range.end += extraBytes;\n                    }\n                }\n                loadSegments(representation, type, info.range, info, callback);\n            } else {\n                var ref = sidx.references;\n                var loadMultiSidx,\n                    segments;\n\n                if (ref !== null && ref !== undefined && ref.length > 0) {\n                    loadMultiSidx = (ref[0].reference_type === 1);\n                }\n\n                if (loadMultiSidx) {\n                    log('Initiate multiple SIDX load.');\n                    info.range.end = info.range.start + sidx.size;\n\n                    var j, len, ss, se, r;\n                    var segs = [];\n                    var count = 0;\n                    var offset = (sidx.offset || info.range.start) + sidx.size;\n                    var tmpCallback = function (result) {\n                        if (result) {\n                            segs = segs.concat(result);\n                            count++;\n\n                            if (count >= len) {\n                                callback(segs, representation, type);\n                            }\n                        } else {\n                            callback(null, representation, type);\n                        }\n                    };\n\n                    for (j = 0, len = ref.length; j < len; j++) {\n                        ss = offset;\n                        se = offset + ref[j].referenced_size - 1;\n                        offset = offset + ref[j].referenced_size;\n                        r = {start: ss, end: se};\n                        loadSegments(representation, null, r, info, tmpCallback);\n                    }\n\n                } else {\n                    log('Parsing segments from SIDX.');\n                    segments = getSegmentsForSidx(sidx, info);\n                    callback(segments, representation, type);\n                }\n            }\n        };\n\n        request.onloadend = request.onerror = function () {\n            if (!needFailureReport) return;\n\n            needFailureReport = false;\n            errHandler.downloadError('SIDX', info.url, request);\n            callback(null, representation, type);\n        };\n\n        sendRequest(request, info);\n        log('Perform SIDX load: ' + info.url);\n    }\n\n    function reset() {\n        errHandler = null;\n        boxParser = null;\n        requestModifier = null;\n        log = null;\n    }\n\n    function getSegmentsForSidx(sidx, info) {\n\n        var refs = sidx.references;\n        var len = refs.length;\n        var timescale = sidx.timescale;\n        var time = sidx.earliest_presentation_time;\n        var start = info.range.start + sidx.offset + sidx.first_offset + sidx.size;\n        var segments = [];\n        var segment,\n            end,\n            duration,\n            size;\n\n        for (var i = 0; i < len; i++) {\n            duration = refs[i].subsegment_duration;\n            size = refs[i].referenced_size;\n\n            segment = new Segment();\n            segment.duration = duration;\n            segment.media = info.url;\n            segment.startTime = time;\n            segment.timescale = timescale;\n            end = start + size - 1;\n            segment.mediaRange = start + '-' + end;\n            segments.push(segment);\n            time += duration;\n            start += size;\n        }\n\n        return segments;\n    }\n\n    function findInitRange(isoFile) {\n        var ftyp = isoFile.getBox('ftyp');\n        var moov = isoFile.getBox('moov');\n\n        var initRange = null;\n        var start,\n            end;\n\n        log('Searching for initialization.');\n\n        if (moov && moov.isComplete) {\n            start = ftyp ? ftyp.offset : moov.offset;\n            end = moov.offset + moov.size - 1;\n            initRange = start + '-' + end;\n\n            log('Found the initialization.  Range: ' + initRange);\n        }\n\n        return initRange;\n    }\n\n    function sendRequest(request, info) {\n        if (!info.url) {\n            return;\n        }\n\n        request.open('GET', requestModifier.modifyRequestURL(info.url));\n        request.responseType = 'arraybuffer';\n        request.setRequestHeader('Range', 'bytes=' + info.range.start + '-' + info.range.end);\n        request = requestModifier.modifyRequestHeader(request);\n        request.send(null);\n    }\n\n    function onLoaded(segments, representation, type) {\n        if (segments) {\n            eventBus.trigger(Events.SEGMENTS_LOADED, {segments: segments, representation: representation, mediaType: type});\n        } else {\n            eventBus.trigger(Events.SEGMENTS_LOADED, {segments: null, representation: representation, mediaType: type, error: new Error(null, 'error loading segments', null)});\n        }\n    }\n\n    instance = {\n        setConfig: setConfig,\n        initialize: initialize,\n        loadInitialization: loadInitialization,\n        loadSegments: loadSegments,\n        reset: reset\n    };\n\n    return instance;\n}\n\nSegmentBaseLoader.__dashjs_factory_name = 'SegmentBaseLoader';\nexport default FactoryMaker.getSingletonFactory(SegmentBaseLoader);\n"]}